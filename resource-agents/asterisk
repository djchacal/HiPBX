#!/bin/sh
#
# OCF Asterisk Resource Agent script.
# Copyright (c) 2011 Rob Thomas <xrobau@gmail.com>

#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# This script is based on the 'anything' OCF RA
# API is based on the documentation provided at
# http://www.opencf.org/cgi-bin/viewcvs.cgi/specs/ra/resource-agent-api.txt?rev=HEAD

# OCF instance parameters
#       OCF_RESKEY_binfile
#       OCF_RESKEY_cmdline_options
#       OCF_RESKEY_logfile
#       OCF_RESKEY_errlogfile
#       OCF_RESKEY_user
#       OCF_RESKEY_monitor_hook
#       OCF_RESKEY_stop_timeout
#
# This RA starts $binfile with $cmdline_options as $user and writes a $pidfile from that. 
# If you want it to, it logs:
# - stdout to $logfile, stderr to $errlogfile or 
# - stdout and stderr to $logfile
# - or to will be captured by lrmd if these options are omitted.
# Monitoring is done through $pidfile or your custom $monitor_hook script. 
# The RA expects the program to keep running "daemon-like" and
# not just quit and exit. So this is NOT (yet - feel free to
# enhance) a way to just run a single one-shot command which just
# does something and then exits.

OCF_ROOT=/usr/lib/ocf
# Initialization:
: ${OCF_FUNCTIONS_DIR=${OCF_ROOT}/resource.d/heartbeat}
. ${OCF_FUNCTIONS_DIR}/.ocf-shellfuncs

if [ -z "$OCF_RESKEY_pidfile" ]; then
	pidfile="/var/run/asterisk/asterisk.pid"
else
	pidfile="$OCF_RESKEY_pidfile"
fi

# defaults
directory="/usr/sbin"
logfile=" /var/run/asterisk/asterisk.stdout"
errlogfile=" /var/run/asterisk/asterisk.stderr"
user="apache"
group="apache"
[ -z "$OCF_RESKEY_directory" ] || directory="$OCF_RESKEY_directory"
[ -z "$OCF_RESKEY_logfile" ]  || logfile="$OCF_RESKEY_logfile"
[ -z "$OCF_RESKEY_errlogfile" ] || errlogfile="$OCF_RESKEY_errlogfile"
[ -z "$OCF_RESKEY_user" ] || user="$OCF_RESKEY_user"
[ -z "$OCF_RESKEY_group" ]  || group="$OCF_RESKEY_group"
instance_name="$OCF_RESOURCE_INSTANCE"
cmdline_options="$OCF_RESKEY_cmdline_options"
[ -z "$user" ] && user=root

getpid() {
        grep -o '[0-9]*' $1
}

asterisk_status() {
	if $(asterisk -rx "core show status" > /dev/null 2>&1) ; then
		return $OCF_RUNNING
	else
		return $OCF_NOT_RUNNING
	fi
}

asterisk_start() {
	ocf_log debug "Starting $instance_name"
	cmdline="$directory/asterisk -U$user -G$group $cmdline_options > $logfile 2> $errlogfile"
	echo $cmdline >> /tmp/log
	$cmdline && return 0
	return 1
}

asterisk_stop() {
	ocf_log error "Stopping $instance_name: "
}

asterisk_monitor() {
	asterisk_status
}

asterisk_validate() {
	return $OCF_SUCCESS
}

asterisk_meta() {
cat <<END
<?xml version="1.0"?>
<!DOCTYPE resource-agent SYSTEM "ra-api-1.dtd">
<resource-agent name="asterisk">
<version>1.0</version>
<longdesc lang="en">
This is an OCF RA to manage Asterisk. It will try to auto-restart Asterisk 
if it finds it down for any reason (check in 'monitor'). This may be an unwanted
action, and if so, create a paramater of 'no-auto-restart' and set it to any
non-null string.

Note that a 'stop' will not immediately terminate Asterisk, and will wait 
the 'stop' timeout value for all calls to complete, before forcing a stop. 

There may need to be some fine-tuning of your settings, as Asterisk will not
accept calls whilst it's in a shutting-down state. So a too-long pause will
result in people not being able to create a new call whilst, for example,
someone is sending a 20 page Fax that will take 10 minutes to complete. 

</longdesc>
<shortdesc lang="en">Manages an Asterisk service</shortdesc>
<parameters>
	<parameter name="directory" required="0">
		<longdesc lang="en">The location of the Asterisk binary.
Defaults to '/usr/sbin'.  </longdesc>
		<shortdesc lang="en">Full path of asterisk</shortdesc>
		<content type="string" default="/usr/sbin"/>
	</parameter>
	<parameter name="cmdline_options" required="0">
		<longdesc lang="en"> Command line options to pass to Asterisk. 
If you're running multiple Asterisk on the same machine, you would put
the configuraiton file here - such as "-C /etc/asterisk/node1/asterisk.conf"</longdesc>
		<shortdesc lang="en">Command line options</shortdesc>
		<content type="string" default=""/>
	</parameter>
	<parameter name="pidfile" required="0">
		<longdesc lang="en">Optional file to read the PID from. 
Defaults to /var/run/asterisk/asterisk.pid</longdesc>
		<shortdesc lang="en">File to read PID from</shortdesc>
		<content type="string" default="/var/run/asterisk/asterisk.pid"/>
	</parameter>
	<parameter name="logfile" required="0">
		<longdesc lang="en"> File to write Asterisk STDOUT output to. 
Defaults to /var/run/asterisk/asterisk.stdout</longdesc>
		<shortdesc lang="en">File for Asterisk output</shortdesc>
		<content type="string" default="/var/run/asterisk/asterisk.stdout"/>
	</parameter>
	<parameter name="errlogfile" required="0">
		<longdesc lang="en"> File to write Asterisk STDERR output to. 
Defaults to /var/run/asterisk/asterisk.stderr</longdesc>
		<shortdesc lang="en">File to write STDERR to</shortdesc>
		<content type="string" default="/var/run/asterisk/asterisk.stderr"/>
	</parameter>
	<parameter name="user" required="0">
		<longdesc lang="en">User to run Asterisk as. Note that this is required to be 'apache' for 
FreePBX installs.If you're not using FreePBX you should change this.
Defaults to 'apache' </longdesc>
		<shortdesc lang="en">User to run Asterisk as</shortdesc>
		<content type="string" default="apache"/>
	</parameter>
	<parameter name="group" required="0">
		<longdesc lang="en">Group to run Asterisk as. Note that this is required to be 'apache' for 
FreePBX installs. If you're not using FreePBX you should change this.
Defaults to 'apache' </longdesc>
		<shortdesc lang="en">Group to run Asterisk as</shortdesc>
		<content type="string" default="apache"/>
	</parameter>
	<parameter name="stop_timeout">
		<longdesc lang="en">Waits for this amount of time for Asterisk to shut down. ('core stop now'). 
After this amount of time, Asterisk is forefully shut down. This is done with a kill -9.
Defaults to 30 seconds</longdesc>
		<shortdesc lang="en">Seconds to wait after sending a 'core stop now'</shortdesc>
		<content type="string" default="30"/>
	</parameter>
</parameters>
<actions>
	<action name="start"   timeout="20s" />
	<action name="stop"    timeout="60s" />
	<action name="monitor" depth="0"  timeout="5s" interval="10" />
	<action name="meta-data"  timeout="5" />
	<action name="validate-all"  timeout="5" />
</actions>
</resource-agent>
END
exit 0
}

case "$1" in
	meta-data|metadata|meta_data)
		asterisk_meta
	;;
	start)
		asterisk_start
	;;
	stop)
		asterisk_stop
	;;
	monitor)
		asterisk_monitor
	;;
	validate-all)
		asterisk_validate
	;;
	*)
		ocf_log err "$0 was called with unsupported arguments: $*"
		exit $OCF_ERR_UNIMPLEMENTED
	;;
esac
