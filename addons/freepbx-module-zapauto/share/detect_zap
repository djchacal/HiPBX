#!/bin/sh
#
# $Id: detect_zap 7802 2010-04-07 13:33:29Z diego $
#
#   Written by Diego Iastrubni <diego.iastrubni@xorcom.com>
#   Copyright (C) 2005,2006,2009 Xorcom
#  
#   All rights reserved.
#  
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#  
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#  
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# a small script, which uses genzaptelconf to search for new drivers 
# edit /etc/modules as needed, calling zap2amp to generate AMP configuration
# and eventually restart asterisk to make it aware of the new HW


make_sound_zaptel(){
	if [ ! -x /usr/bin/beep ]; then
		return 0
	fi

# no zaptel channels found - no zaptel HW	
#	if ! cat /etc/zaptel.conf | grep -v '^#' | grep -q 'fx.*=[0-9]*'; then 
#		exit
#	fi

	if cat /proc/zaptel/* 2> /dev/null | grep -q '/[0-9]/[0-9]/[0-9]' ; then 
		# old ts-1
		# /usr/bin/beep -f 10000
	
		# new ts-1
		beep -f 5000 -l 100 -d 10 -r 2
	fi	
}

# nullify a file
blank_file(){
	if [ -f  $1 ]; then
		rm -f $1
		touch $1
	fi
}

set -e

AST_USER=asterisk
AST_GROUP=asterisk
AST_SHELL=/bin/sh
# on some systems use /usr/sbin/amportal instead:
ASTERISK_INIT=${ASTERISK_INIT:-/etc/init.d/asterisk}
ASTERISK_INIT_TRIXBOX=${ASTERISK_INIT_TRIXBOX:-/usr/sbin/amportal}
ZAPDRIVERS=${ZAPDRIVERS:-/usr/share/zaptel/zaptel_drivers}
DAHDI_GENCONF=${DAHDI_GENCONF:-/usr/sbin/dahdi_genconf}
ZAPCONF=${ZAPCONF:-/usr/sbin/zapconf}
DAHDI_CFG=${DAHDI_CFG:-/usr/sbin/dahdi_cfg}
ZTCFG=${ZTCFG:-/sbin/ztcfg}
TRIXBOX_ZTCFG=${TRIXBOX_ZTCFG:-/usr/sbin/ztcfg}
ZAP2AMP=${ZAP2AMP:-/usr/share/freepbx-common/zap2amp}
RETRIEVE_CONF=${RETRIEVE_CONF:-/usr/share/asterisk/bin/retrieve_conf}
FIX_AST_DB=${FIX_AST_DB:-/usr/share/freepbx-common/fix_ast_db}
XPP_SYNC_CMD="/usr/sbin/xpp_sync auto"

if [ -r /etc/trixbox/trixbox-version ]
then
	ASTERISK_INIT="${ASTERISK_INIT_TRIXBOX}"
fi

# Search alternative locations of these tools
for ZAP2AMP in $ZAP2AMP /var/lib/asterisk/bin/zap2amp
do
	[ -x "$ZAP2AMP" ] && break;
done
[ -x "$ZAP2AMP" ] || { echo 1>&2 "$0: Missing $ZAP2AMP"; exit 1; }

for RETRIEVE_CONF in $RETRIEVE_CONF /var/lib/asterisk/bin/retrieve_conf
do
	[ -x "$RETRIEVE_CONF" ] && break;
done
[ -x "$RETRIEVE_CONF" ] || { echo 1>&2 "$0: Missing $RETRIEVE_CONF"; exit 1; }

for FIX_AST_DB in $FIX_AST_DB /var/lib/asterisk/bin/fix_ast_db
do
	[ -x "$FIX_AST_DB" ] && break;
done
[ -x "$FIX_AST_DB" ] || { echo 1>&2 "$0: Missing $FIX_AST_DB"; exit 1; }

prep_hardware_func='prep_hardware'
ZAPCONFVERSION=0	# Minimal assumptions...
dahdi_used=0


if /sbin/modinfo zaptel > /dev/null 2>&1; then
	# You can count on trixbox to misbehave:
	if [ ! -x "$ZTCFG" ]
	then 
		if [ -x "$TRIXBOX_ZTCFG" ]
		then
			ZTCFG=${TRIXBOX_ZTCFG}
		else
			echo 1>&2 "$0: Missing $ZTCFG"
			exit 1
		fi
	fi
	if [ ! -x "$ZAPCONF" ]; then
		echo " * No zapconf detected. Switching back to genzaptelconf (hope for good)"
		ZAPCONFVERSION=0
	else
		if zapconfvers=`$ZAPCONF -V 2> /dev/null`; then
			ZAPCONFVERSION=`echo "$zapconfvers" | sed -e 's/.*version=//' -e 's/ .*//'`
			[ -x "$ZAPDRIVERS" ] || { echo 1>&2 "$0: Missing $ZAPDRIVERS"; exit 1; }
		else
			echo " * Old zapconf detected. Switching back to genzaptelconf (hope for good)"
			ZAPCONFVERSION=0
		fi
	fi
	if [ "$ZAPCONFVERSION" = 0 ]; then
		prep_hardware_func='prep_hardware_old'
	fi
elif /sbin/modinfo dahdi > /dev/null 2>&1; then
	if ! perl -MDahdi::Config::Gen::Modules -e '' 2>/dev/null; then
		echo 1>&2 "You need a newer version of dahdi-tools "
		echo 2>&2 "(that supports dahdi_genconf modules)'.  Aborting."
		exit 1
	fi
	dahdi_used=1
	prep_hardware_func='prep_hardware_dahdi'
else
	echo 1>&2 "$0: No Zaptel/DAHDI drivers found"
	exit 1
fi

prep_hardware_old() {
	# do not run the version in /usr/local/sbin,
	# since trixbox contains a stupid version out there
	echo ' * Using old configuration method'
	/usr/sbin/genzaptelconf -d -s -M -F
}

prep_hardware() {
	${ASTERISK_INIT} stop
	/etc/init.d/zaptel stop
	$ZAPDRIVERS -vM
	echo " * Using new configuration method (version $ZAPCONFVERSION)"
	/etc/init.d/zaptel start || true
	$ZAPCONF -F
	$ZTCFG
	$XPP_SYNC_CMD || true
}

prep_hardware_dahdi() {
	${ASTERISK_INIT} stop
	/etc/init.d/dahdi stop
	$DAHDI_GENCONF modules
	echo " * Using new configuration method (version $ZAPCONFVERSION)"
	/etc/init.d/dahdi start || true
	$DAHDI_GENCONF -F
	$DAHDI_CFG
	$XPP_SYNC_CMD || true
}

# find new HW, asterisk will be running after it, as zap2amp
# needs asterisk running. will also rewrite /etc/modules
echo ' * Searching for new DAHDI hardware'

if [ "$dahdi_used" = 1 ]; then
	blank_file /etc/asterisk/dahdi-channels.conf
	blank_file /etc/asterisk/chan_dahdi_additional.conf
	touch /etc/asterisk/chan_dahdi_additional.conf
else
	blank_file /etc/asterisk/zapata-channels.conf
	blank_file /etc/asterisk/zapata-auto.conf
	blank_file /etc/asterisk/zapata_additional.conf
	touch /etc/asterisk/zapata_additional.conf
fi

$prep_hardware_func

echo ' * Generating freePBX configuration'
if [ "$dahdi_used" = 1 ]; then
	dahdi_files="/etc/asterisk/dahdi-channels.conf /etc/asterisk/chan_dahdi*.conf"
	chown asterisk: $dahdi_files
	chmod g+rw $dahdi_files
	chmod o+r /etc/dahdi/system.conf
else
	chown asterisk: /etc/asterisk/zapata*
	chmod g+rw /etc/asterisk/zapata*
	chmod o+r /etc/zaptel.conf
fi
${ASTERISK_INIT} start
su $AST_USER -s $AST_SHELL -c "$ZAP2AMP"
# Make sure Asterisk has finished registering everything
# so it can report its version:
sleep 5
su $AST_USER -s $AST_SHELL -c "$RETRIEVE_CONF"
su $AST_USER -s $AST_SHELL -c "$FIX_AST_DB"

echo ' * Reloading DAHDI configuration'

if asterisk -rx 'core show version' | grep -q '1.6'; then
	asterisk -rx "core restart now"
else
	asterisk -rx "restart now"
fi

make_sound_zaptel

if [ -x /etc/init.d/op-panel ]; then
	echo ' * Reloading Flash Operator Panel'
	/etc/init.d/op-panel restart
fi

echo "DONE"
